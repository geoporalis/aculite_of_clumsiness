from pathlib import Path

example = False # True #

dir = Path(__file__).parent.resolve()
file = Path(dir/'input').resolve() if not example else Path(dir/'example').resolve()

wall = set()
poi = set()
start, end = (), ()
area = []
for x, l in enumerate(open(file).readlines()):
    line = []
    for y, c in enumerate(l.strip('\n')):
        if c == 'S':
            start = (x,y)
            c = '.'
        if c == 'E':
            end = (x,y)
            c = '.'
        line.append(c)
    area.append(line)

shorts = []


todo = [(start)]
nsec = dict()
def addSchortCut(von, nach):
    sc = todo.index((von)) - todo.index((nach))# + 2
    if sc > 0:
        if not str(sc) in nsec:
            nsec[str(sc)]=0
        nsec[str(sc)]+=1    

def path(limit):
    count=0
    for (x,y) in todo:
        if (x+2, y) in todo and "".join([area[x][y],area[x+1][y],area[x+2][y]]) == '.#.':
            addSchortCut((x,y), (x+2, y))
        if (x-2, y) in todo and "".join([area[x][y],area[x-1][y],area[x-2][y]]) == '.#.':
            addSchortCut((x,y), (x-2, y))
        if (x, y+2) in todo and "".join([area[x][y],area[x][y+1],area[x][y+2]]) == '.#.':
            addSchortCut((x,y), (x, y+2))
        if (x, y-2) in todo and "".join([area[x][y],area[x][y-1],area[x][y-2]]) == '.#.':
            addSchortCut((x,y), (x, y-2))
        if (x,y) == end: return 1
        for dx,dy in (x,y+1), (x,y-1), (x+1,y), (x-1,y):
            if not (dx,dy) in todo:
                if area[dx][dy] == '.':
                    todo.append((dx,dy))

route = path(1024)
print('track length', len(todo))
# print(shorts)

# nsec = dict()
# for s in shorts:
#     idx0, idx1 = todo.index(s[0]), todo.index(s[1])
#     sc = idx1-idx0+2
#     if sc > 0:
#         if not sc in nsec:
#             nsec[sc]=0
#         nsec[sc]+=1

saved = 0
for s, v in nsec.items():
    if int(s) > 100:
        saved += v

print('Answer1:', saved)  
# example:  0
# input:    5433 # too high

# crazy: 1502 #1028136  ?manhatten distance?
