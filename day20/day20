import re
from pathlib import Path

example = True  #False # 

dir = Path(__file__).parent.resolve()
file = Path(dir/'input').resolve() if not example else Path(dir/'example').resolve()

wall = set()
poi = set()
start, end = (), ()
area = []
for x, l in enumerate(open(file).readlines()):
    line = []
    for y, c in enumerate(l.strip('\n')):
        line.append(c)
        if c == 'S':
             start = (x,y)
        if c == 'E':
             end = (x,y)
    area.append(line)

shorts = []


todo = [(start)]
seen = set()
def path(limit):
    count=0
    for (x,y) in todo:
        if (x,y) == end: return 1
        for dx,dy in (x,y+1), (x,y-1), (x+1,y), (x-1,y):
            if not (dx,dy) in todo:
                if area[dx][dy] == '.':
                    todo.append((dx,dy))
                # try:
                #     if "".join(area[x:x+2][y]) == '.#.':
                #         shorts.append((x,y),(x+2, y))
                # except:
                #     pass
                # try:
                #     if "".join(area[x-2:x][y]) == '.#.':
                #         shorts.append((x,y),(x-2, y))
                # except:
                #     pass
                # try:
                #     if "".join(area[x][y:y+2]) == '.#.':
                #         shorts.append((x,y),(x, y+2))
                # except:
                #     pass
                # try:
                #     if "".join(area[x][y-2:y]) == '.#.':
                #         shorts.append((x,y),(x, y-2))
                # except:
                #     pass

route = path(1024)
print(todo)
print(shorts)

nsec = dict()
for s in shorts:
    idx0, idx1 = todo.index(s[0]), todo.index(s[1])
    sc = idx1-idx0+2
    if sc > 0:
        if not sc in nsec:
            nsec[sc]=0
        nsec[sc]+=1

saved = 0
for s, v in nsec.items():
    if int(s) < 100:
        saved+= v


print(saved)  

# for l in range(1024,len(dtat)):
#     if path(l) == 1e23:
#         print(l-1, dtat[l-1])
#         break